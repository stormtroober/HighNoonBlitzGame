name: Deploy Dokka Documentation

on:
  push:
    branches:
      - main
  workflow_dispatch:    

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache Dokka jars
      uses: actions/cache@v3
      with:
        path: jars
        key: jars-cache-${{ hashFiles('**/dokka-configuration.json') }}
        restore-keys: |
          jars-cache-

    - name: Create directories
      run: |
        mkdir -p jars
        mkdir -p public

    - name: Download Dokka jars
      run: |
        if [ ! -f jars/dokka-cli-2.0.0.jar ]; then wget -O jars/dokka-cli-2.0.0.jar "https://repo1.maven.org/maven2/org/jetbrains/dokka/dokka-cli/2.0.0/dokka-cli-2.0.0.jar"; fi
        if [ ! -f jars/dokka-base-2.0.0.jar ]; then wget -O jars/dokka-base-2.0.0.jar "https://repo1.maven.org/maven2/org/jetbrains/dokka/dokka-base/2.0.0/dokka-base-2.0.0.jar"; fi
        if [ ! -f jars/analysis-kotlin-descriptors-2.0.0.jar ]; then wget -O jars/analysis-kotlin-descriptors-2.0.0.jar "https://repo1.maven.org/maven2/org/jetbrains/dokka/analysis-kotlin-descriptors/2.0.0/analysis-kotlin-descriptors-2.0.0.jar"; fi
        if [ ! -f jars/kotlinx-html-jvm-0.8.0.jar ]; then wget -O jars/kotlinx-html-jvm-0.8.0.jar "https://repo1.maven.org/maven2/org/jetbrains/kotlinx/kotlinx-html-jvm/0.8.0/kotlinx-html-jvm-0.8.0.jar"; fi
        if [ ! -f jars/freemarker-2.3.31.jar ]; then wget -O jars/freemarker-2.3.31.jar "https://repo1.maven.org/maven2/org/freemarker/freemarker/2.3.31/freemarker-2.3.31.jar"; fi

    - name: Generate Dokka Documentation
      run: java -jar jars/dokka-cli-2.0.0.jar dokka-configuration.json

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: documentation-report
        path: public

  publish-to-pages:
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Create and Checkout gh-pages Branch
        run: |
          if git ls-remote --heads origin gh-pages | grep -q 'gh-pages'; then
            git checkout gh-pages
          else
            git checkout --orphan gh-pages
            git rm -rf .
            git commit --allow-empty -m "Initial gh-pages branch"
            git push origin gh-pages
          fi
          rm -rf docs
      
      - name: Download Documentation Artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation-report
          path: docs
      
      - name: Commit and Push Documentation to gh-pages
        run: |
          git add docs
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "docs: Update documentation for gh-pages"
            git push origin gh-pages
          fi